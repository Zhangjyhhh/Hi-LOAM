setting:
  name: "ncd_incre_reg"
  output_root: "./experiments/ncd"
  pc_path: "/media/jyzhang/C0FED904FED8F39E/data_zjy/data/ncd_example/quad/pcd"
  pose_path: "/media/jyzhang/C0FED904FED8F39E/data_zjy/data/ncd_example/quad/poses.txt"
  calib_path: "/media/jyzhang/C0FED904FED8F39E/data_zjy/data/ncd_example/quad/calib.txt"
  load_model: False
  model_path: "" 
  first_frame_ref: False
  begin_frame: 0
  end_frame: 2000
  every_frame: 1 # 1 means does not skip
  device: "cuda"
  gpu_id: "0"
  intrinsic_correct: False
  init_trans: 0.0
  deskew: False
process:
  min_range_m: 1.5
  pc_radius_m: 50.0  # distance filter for each frame
  min_z_m: -10.0 #-10
  rand_downsample: False # use random or voxel downsampling
  vox_down_m: 0.05
  rand_down_r: 0.2
  tracking_vox_down: 0.2
  mapping_vox_down: 0.05
  pool_capacity: 2e7  # like pin slam 2e7
  bs_new_sample: 2000
sampler:
  surface_sample_range_m: 0.5 #0.5
  surface_sample_n: 4
  free_sample_begin_ratio: 0.3
  free_sample_end_dist_m: 1.0
  free_sample_n: 4
octree:
  leaf_vox_size: 0.3
  tree_level_world: 10
  tree_level_feat: 3
  feature_dim: 12
  poly_int_on: True
  octree_from_surface_samples: True
decoder:
  mlp_level: 2
  mlp_hidden_dim: 32
  freeze_after_frame: 30 #30
loss:
  ray_loss: False
  main_loss_type: sdf_bce  # select from sdf_bce (our proposed), sdf_l1, sdf_l2, dr, dr_neus
  sigma_sigmoid_m: 0.08
  loss_weight_on: False
  behind_dropoff_on: False
  ekional_loss_on: True
  normal_loss_on: False
  weight_e: 0.1
continual:
  continual_learning_reg: True # using incremental mapping with regularization
  lambda_forget: 1e4 # the larger this value, the model would be less likely to forget
  window_replay_on: False # replay within the sliding window
  window_radius_m: 0
optimizer:
  iters: 300  # iterations per frame
  batch_size: 8192
  learning_rate: 0.0001
  weight_decay: 1e-7 # l2 regularization
eval:
  wandb_vis_on: False # log to wandb or not
  o3d_vis_on: True # visualize the mapping or not
  vis_freq_iters: 0 
  save_freq_iters: 10000 # save the model and octree every x iterations
  mesh_freq_frame: 1300 # reconstruct the mesh every x frames
  mc_vis_level: 1
  mc_local: False
  mc_res_m: 0.2 #0.1 # reconstruction marching cubes resolution
  mc_with_octree: True # querying sdf only in certain levels of the o
  save_map: False # save the sdf map or not